{"version":3,"file":"backtotopbutton.min.js","sources":["../src/backtotopbutton.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JS code back to top button.\n *\n * @module     theme_ucsf/backtotopbutton\n * @copyright  2022 Alexander Bias, lern.link GmbH <alexander.bias@lernlink.de>\n * @copyright  on behalf of Zurich University of Applied Sciences (ZHAW)\n * @copyright  based on code from theme_boost_campus by Kathrin Osswald.\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @link       https://moodle.org/plugins/theme_boost_union\n */\n\ndefine(['jquery', 'core/str', 'core/notification'], function($, str, Notification) {\n  \"use strict\";\n\n  // Remember if the back to top button is shown currently.\n  let buttonShown = false;\n\n  /**\n   * Initializing.\n   */\n  function initBackToTop() {\n    // Define the scroll distance after which the button will be shown.\n    const scrolldistance = 220;\n\n    // Get the string backtotop from language file.\n    let stringsPromise = str.get_string('backtotop', 'theme_ucsf');\n\n    // If the string has arrived, add backtotop button to DOM and add scroll and click handlers.\n    $.when(stringsPromise).then(function(string) {\n      // Add a fontawesome icon to the footer as the back to top button.\n      $('#page-footer [data-region=\"footer-container-popover\"]').append('<button id=\"back-to-top\" ' +\n        'class=\"btn btn-icon bg-secondary icon-no-margin d-print-none\"' +\n        'aria-label=\"' + string + '\">' +\n        '<i aria-hidden=\"true\" class=\"fa fa-chevron-up fa-fw \"></i></button>');\n\n      // Check directly if the button should be shown.\n      // This is helpful for all cases when this code here runs _after_ the page has been scrolled,\n      // especially by the scrollspy feature or by a simple browser page reload.\n      if ($(window).scrollTop() > scrolldistance) {\n        checkAndShow();\n      } else {\n        checkAndHide();\n      }\n\n      // This function fades the button in when the page is scrolled down or fades it out\n      // if the user is at the top of the page again.\n      $(window).on('scroll', function() {\n        if ($(window).scrollTop() > scrolldistance) {\n          checkAndShow();\n        } else {\n          checkAndHide();\n        }\n      });\n\n      // This function scrolls the page to top with a duration of 500ms.\n      $('#back-to-top').on('click', function(event) {\n        event.preventDefault();\n        $('html, body').animate({scrollTop: 0}, 500);\n        $('#back-to-top').blur();\n      });\n\n      // This will check if there is a communication button shown on the page already.\n      // If yes, it will add a class to the body tag which will be later used to align the back-to-top button\n      // with the communications button.\n      // This is necessary as the communications button would otherwise be overlaid by the back-to-top button.\n      if ($('#page-footer .btn-footer-communication').length) {\n        $('body').addClass('theme-ucsf-commincourse');\n      }\n\n      return true;\n    }).fail(Notification.exception);\n  }\n\n  /**\n   * Helper function to handle the button visibility when the page is scrolling up.\n   */\n  function checkAndHide() {\n    // Check if the button is still shown.\n    if (buttonShown === true) {\n      // Fade it out and remember the status in the end.\n      // To be precise, the faceOut() function will be called multiple times as buttonShown is not set until the button is\n      // really faded out. However, as soon as it is faded out, it won't be called until the button is shown again.\n      $('#back-to-top').fadeOut(100, function() {\n        buttonShown = false;\n      });\n    }\n  }\n\n  /**\n   * Helper function to handle the button visibility when the page is scrolling down.\n   */\n  function checkAndShow() {\n    // Check if the button is not yet shown.\n    if (buttonShown === false) {\n      // Fade it in and remember the status in the end.\n      $('#back-to-top').fadeIn(300, function() {\n        buttonShown = true;\n      });\n    }\n  }\n\n  return {\n    init: function() {\n      initBackToTop();\n    }\n  };\n});\n"],"names":["define","$","str","Notification","buttonShown","checkAndHide","fadeOut","checkAndShow","fadeIn","init","stringsPromise","get_string","when","then","string","append","window","scrollTop","on","event","preventDefault","animate","blur","length","addClass","fail","exception","initBackToTop"],"mappings":";;;;;;;;;;AA0BAA,oCAAO,CAAC,SAAU,WAAY,sBAAsB,SAASC,EAAGC,IAAKC,kBAI/DC,aAAc,WA6DTC,gBAEa,IAAhBD,aAIFH,EAAE,gBAAgBK,QAAQ,KAAK,WAC7BF,aAAc,cAQXG,gBAEa,IAAhBH,aAEFH,EAAE,gBAAgBO,OAAO,KAAK,WAC5BJ,aAAc,WAKb,CACLK,KAAM,2BA7EFC,eAAiBR,IAAIS,WAAW,YAAa,cAGjDV,EAAEW,KAAKF,gBAAgBG,MAAK,SAASC,eAEnCb,EAAE,yDAAyDc,OAAO,qGAE/CD,OAF+C,yEAQ9Db,EAAEe,QAAQC,YAhBO,IAiBnBV,eAEAF,eAKFJ,EAAEe,QAAQE,GAAG,UAAU,WACjBjB,EAAEe,QAAQC,YAzBK,IA0BjBV,eAEAF,kBAKJJ,EAAE,gBAAgBiB,GAAG,SAAS,SAASC,OACrCA,MAAMC,iBACNnB,EAAE,cAAcoB,QAAQ,CAACJ,UAAW,GAAI,KACxChB,EAAE,gBAAgBqB,UAOhBrB,EAAE,0CAA0CsB,QAC9CtB,EAAE,QAAQuB,SAAS,4BAGd,KACNC,KAAKtB,aAAauB,WAiCnBC"}